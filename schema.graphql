type AddAuthorization @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DeployCollateralAuctionHouse @entity(immutable: true) {
  id: Bytes!
  cType: Bytes! # bytes32
  collateralAuctionHouse: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DisableContract @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModifyParameters @entity(immutable: true) {
  id: Bytes!
  param: Bytes! # bytes32
  cType: Bytes! # bytes32
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAuthorization @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SurplusAuctionHouseAddAuthorization @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SurplusAuctionHouseDisableContract @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SurplusAuctionHouseIncreaseBidSize @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  bidder: Bytes! # address
  raisedAmount: BigInt! # uint256
  soldAmount: BigInt! # uint256
  bidExpiry: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SurplusAuctionHouseModifyParameters @entity(immutable: true) {
  id: Bytes!
  param: Bytes! # bytes32
  cType: Bytes! # bytes32
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SurplusAuctionHouseRemoveAuthorization @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SurplusAuctionHouseRestartAuction @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  auctionDeadline: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SurplusAuctionHouseSettleAuction @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  highBidder: Bytes! # address
  raisedAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SurplusAuctionHouseStartAuction @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  amountToSell: BigInt! # uint256
  amountToRaise: BigInt! # uint256
  auctionDeadline: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SurplusAuctionHouseTerminateAuctionPrematurely @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  highBidder: Bytes! # address
  raisedAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DebtAuctionHouseAddAuthorization @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DebtAuctionHouseDecreaseSoldAmount @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  bidder: Bytes! # address
  raisedAmount: BigInt! # uint256
  soldAmount: BigInt! # uint256
  bidExpiry: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DebtAuctionHouseDisableContract @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DebtAuctionHouseModifyParameters @entity(immutable: true) {
  id: Bytes!
  param: Bytes! # bytes32
  cType: Bytes! # bytes32
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DebtAuctionHouseRemoveAuthorization @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DebtAuctionHouseRestartAuction @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  auctionDeadline: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DebtAuctionHouseSettleAuction @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  highBidder: Bytes! # address
  raisedAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DebtAuctionHouseStartAuction @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  amountToSell: BigInt! # uint256
  amountToRaise: BigInt! # uint256
  auctionDeadline: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DebtAuctionHouseTerminateAuctionPrematurely @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  highBidder: Bytes! # address
  raisedAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollateralAuctionHouseAddAuthorization @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type collateralAuctionHouseModifyParameters @entity(immutable: true) {
  id: Bytes!
  param: Bytes! # bytes32
  cType: Bytes! # bytes32
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollateralAuctionHouseRemoveAuthorization @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollateralAuctionHouseBuyCollateral @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  bidder: Bytes! # address
  raisedAmount: BigInt! # uint256
  soldAmount: BigInt! # uint256
  address: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollateralAuctionHouseStartAuction @entity(immutable: true) {
  id: Bytes!
  auctioneer: Bytes! # address
  auctionId: BigInt! # uint256
  amountToSell: BigInt! # uint256
  amountToRaise: BigInt! # uint256
  address: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollateralAuctionHouseSettleAuction @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  leftoverReceiver: Bytes! # address
  leftoverCollateral: BigInt! # uint256
  address: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollateralAuctionHouseTerminateAuctionPrematurely @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  leftoverReceiver: Bytes! # address
  leftoverCollateral: BigInt! # uint256
  address: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  vault: Vault! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CreateProxy @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  proxy: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  vault: Vault! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Vault @entity {
  id: String!
  owner: Bytes! # address
  collateralType: String!
  collateral: BigInt!
  debt: BigInt!
  transfers: [Transfer!]! @derivedFrom(field: "vault")
  approvals: [Approval!]! @derivedFrom(field: "vault")
  modifications: [ModifySAFECollateralization!]! @derivedFrom(field: "vault")
}

type AllowSAFE @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  vault: Vault!
  usr: Bytes! # address
  ok: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModifySAFECollateralization @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  vault: Vault!
  deltaCollateral: BigInt! # int256
  deltaDebt: BigInt! # int256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MoveSAFE @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  vaultSrc: Vault! # uint256
  vaultDst: Vault! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OpenSAFE @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  own: Bytes! # address
  vault: Vault!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProtectSAFE @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  vault: Vault!
  liquidationEngine: Bytes! # address
  saviour: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type QuitSystem @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  vault: Vault!
  dst: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferCollateral @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  vault: Vault!
  dst: Bytes! # address
  wad: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferCollateral1 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  cType: Bytes! # bytes32
  vault: Vault!
  dst: Bytes! # address
  wad: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferInternalCoins @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  vault: Vault!
  dst: Bytes! # address
  rad: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferSAFEOwnership @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  vault: Vault!
  dst: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
